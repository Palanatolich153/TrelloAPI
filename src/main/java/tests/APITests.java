package tests;

import com.github.javafaker.Faker;
import com.google.gson.Gson;
import com.google.gson.JsonObject;
import config.Constants;
import core.BaseClass;
import dto.card.CardDto;
import dto.list.ListDto;
import helpers.Helper;
import org.testng.annotations.Test;
import org.testng.asserts.SoftAssert;
import services.Services;

public class APITests extends BaseClass {

    /**
     * Creating a List and Mapping a response to a JSON Object
     */
    @Test
    public void createListAndMapResponseToJsonObject() {

        Helper helper = new Helper();
        Services services = new Services();
        SoftAssert assertion = new SoftAssert();

        //Create a List
        JsonObject requestBody = helper.createRequestBody(Constants.listTemplateFilePath);
        JsonObject responseBody = services.executePostRequestAndReturnRequestBody(createListAdditionalURL, requestBody);

        //Verification that the List has been created successfully and has a correct name
        assertion.assertEquals(requestBody.get("name"), responseBody.get("name"));
        assertion.assertAll();
    }

    /**
     * Creating a List and Mapping a response to a DTO
     */
    @Test
    public void createListAndMapResponseToDTO() {

        Gson gson = new Gson();
        Helper helper = new Helper();
        Services services = new Services();
        SoftAssert assertion = new SoftAssert();

        String exampleName;

        //Create a List
        JsonObject requestBody = helper.createRequestBody(Constants.listTemplateFilePath);
        JsonObject responseBody = services.executePostRequestAndReturnRequestBody(createListAdditionalURL, requestBody);

        //Getting a randomly generated by Faker library name from request body for verification
        exampleName = helper.modifyString(requestBody.get("name"));

        //Mapping response body to ListDto class
        ListDto list = gson.fromJson(responseBody, ListDto.class);

        //Verification that the List has been created successfully and has a correct name
        assertion.assertEquals(list.getName(), exampleName);
        assertion.assertAll();
    }

    /**
     * Creating a Card and Mapping a response to a DTO
     */
    @Test
    public void createCard() {

        Gson gson = new Gson();
        Faker faker = new Faker();
        Helper helper = new Helper();
        Services services = new Services();
        SoftAssert assertion = new SoftAssert();

        String cardName = faker.name().username();

        JsonObject listRequestBody = services.createList(createListAdditionalURL);

        String createCardFullAdditionalURL = createCardAdditionalURL + cardName + "&idList=" + helper.modifyString(listRequestBody.get("id"));

        //Create a Card
        JsonObject cardRequestBody = helper.createRequestBody(Constants.credentialTemplateFilePath);
        JsonObject cardResponseBody = services.executePostRequestAndReturnRequestBody(createCardFullAdditionalURL, cardRequestBody);

        //Mapping response body to ListDto class
        CardDto card = gson.fromJson(cardResponseBody, CardDto.class);

        //Verification that the List has been created successfully and has a correct name
        assertion.assertEquals(cardName, card.getName());
        assertion.assertAll();
    }
}